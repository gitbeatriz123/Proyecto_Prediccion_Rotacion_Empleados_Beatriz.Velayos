cat > docker-compose.yml <<'YAML'
# Stack local para el proyecto de rotación de empleados
# - Spark (master/worker)
# - Jupyter con PySpark (puerto host 8889)
# - PostgreSQL (nombre y puerto host no conflictivos)

services:
  spark-master:
    image: bitnami/spark:3.5.1
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_DIRS=/tmp
    ports:
      - "7077:7077"     # Spark master
      - "8080:8080"     # Spark master UI
    volumes:
      - ./data:/data
      - ./scripts:/scripts
    restart: unless-stopped

  spark-worker-1:
    image: bitnami/spark:3.5.1
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_LOCAL_DIRS=/tmp
    depends_on:
      - spark-master
    ports:
      - "8081:8081"     # Spark worker UI
    volumes:
      - ./data:/data
      - ./scripts:/scripts
    restart: unless-stopped

  jupyter:
    image: jupyter/pyspark-notebook:spark-3.5.1
    container_name: jupyter
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - PYSPARK_PYTHON=python
      - JUPYTER_TOKEN=beatriz         # token fijo para entrar sin mirar logs
    ports:
      - "8889:8888"                   # usa 8889 en tu máquina (8888 suele estar ocupado)
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./data:/data
      - ./scripts:/scripts
      - ./output:/output              # para ver informes/exports desde el host
    depends_on:
      - spark-master
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: postgres-rotacion   # evita conflicto con contenedores "postgres" previos
    environment:
      - POSTGRES_USER=ml
      - POSTGRES_PASSWORD=ml
      - POSTGRES_DB=mlops
    ports:
      - "5442:5432"                     # puerto host no conflictivo
    volumes:
      - ./postgres:/var/lib/postgresql/data
      - ./output:/output
    restart: unless-stopped
YAML

